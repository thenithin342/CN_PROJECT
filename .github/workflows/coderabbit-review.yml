name: CodeRabbit Review

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - main
      - master
      - develop

permissions:
  pull-requests: write
  contents: read

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: CodeRabbit Review
        uses: coderabbitai/openapi-python@v1
        with:
          api_key: ${{ secrets.CODERABBIT_API_KEY }}
          max_file_size: 1000
          github_token: ${{ secrets.GITHUB_TOKEN }}
          review_simple_changes: true
          review_comment_lgtm: false
          path: |
            client/
            server/
            common/
            *.py
          exclude: |
            **/__pycache__/**
            **/*.pyc
            **/.git/**
            **/logs/**

  code-analysis:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pylint flake8 black mypy pytest pytest-cov
      
      - name: Lint with flake8
        run: |
          flake8 client/ server/ --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 client/ server/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        continue-on-error: true
      
      - name: Check code formatting with black
        run: |
          black --check client/ server/ common/
        continue-on-error: true
      
      - name: Type check with mypy
        run: |
          mypy client/ server/ common/ --ignore-missing-imports
        continue-on-error: true

  security-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
      
      - name: Install security scanner
        run: |
          pip install bandit safety
      
      - name: Run Bandit security scan
        run: |
          bandit -r client/ server/ -f json -o bandit-report.json
        continue-on-error: true
      
      - name: Check dependencies for vulnerabilities
        run: |
          safety check --json
        continue-on-error: true

  code-quality:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install radon mccabe
      
      - name: Calculate code complexity
        run: |
          radon cc client/ server/ -a --total-average
        continue-on-error: true
      
      - name: Calculate maintainability index
        run: |
          radon mi client/ server/ -nb
        continue-on-error: true
